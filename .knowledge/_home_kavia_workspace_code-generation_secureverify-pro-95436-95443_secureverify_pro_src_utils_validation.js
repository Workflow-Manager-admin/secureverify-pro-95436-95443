{"is_source_file": true, "format": "JavaScript", "description": "This file provides utility functions for validating various user input fields such as email, password, name, date of birth, phone number, address, document files, and form data. The functions include regular expressions and logical checks to verify input correctness and enforce minimum requirements.", "external_files": [], "external_methods": [], "published": ["isEmailValid", "isPasswordValid", "isNameValid", "isDobValid", "isPhoneValid", "isAddressValid", "isDocumentFileValid", "getDocumentFileError", "validateForm"], "classes": [], "methods": [{"name": "isEmailValid", "description": "Validates an email address using a regex pattern to ensure proper email format."}, {"name": "isPasswordValid", "description": "Checks if a password meets minimum length and contains at least one letter and one number."}, {"name": "isNameValid", "description": "Validates that the name string has at least 2 characters after trimming whitespace."}, {"name": "isDobValid", "description": "Verifies that the date of birth indicates the user is at least 18 years old."}, {"name": "isPhoneValid", "description": "Validates phone number formats allowing various common formats using regex."}, {"name": "isAddressValid", "description": "Ensures the address string is at least 10 characters long."}, {"name": "isDocumentFileValid", "description": "Checks if a given file object is of an acceptable type and under the size limit (10MB)."}, {"name": "getDocumentFileError", "description": "Provides specific error message if the file is invalid based on type or size, otherwise null."}, {"name": "validateForm", "description": "Performs comprehensive form validation, combining individual field checks and returning a dictionary of errors."}], "calls": ["emailRegex.test(email)", "/[a-zA-Z]/.test(password)", "/[0-9]/.test(password)", "name.trim().length", "new Date(dob)", "isNaN(dobDate.getTime())", "today.getFullYear() - dobDate.getFullYear()", "today.getMonth() - dobDate.getMonth()", "file.type", "file.size", "validTypes.includes(file.type)"], "search-terms": ["validation functions", "email validation", "password requirements", "name validation", "date of birth check", "phone validation regex", "address validation", "file validation", "form validation"], "state": 2, "file_id": 32, "knowledge_revision": 65, "git_revision": "c719ce3deadfba73b617f0cf2c25e67d3bb3923e", "ctags": [{"_type": "tag", "name": "age", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  let age = today.getFullYear() - dobDate.getFullYear();$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "dobDate", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const dobDate = new Date(dob);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "emailRegex", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const emailRegex = \\/^[^\\\\s@]+@[^\\\\s@]+\\\\.[^\\\\s@]+$\\/;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "errors", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const errors = {};$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getDocumentFileError", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const getDocumentFileError = (file) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isAddressValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isAddressValid = (address) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isDobValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isDobValid = (dob) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isDocumentFileValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isDocumentFileValid = (file) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isEmailValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isEmailValid = (email) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isNameValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isNameValid = (name) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isPasswordValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isPasswordValid = (password) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isPhoneValid", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const isPhoneValid = (phone) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidSize", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const isValidSize = file.size <= maxSize;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isValidType", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const isValidType = validTypes.includes(file.type);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "maxSize", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const maxSize = 10 * 1024 * 1024; \\/\\/ 10MB in bytes$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "monthDiff", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const monthDiff = today.getMonth() - dobDate.getMonth();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "phoneRegex", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const phoneRegex = \\/^[+]?[(]?[0-9]{3}[)]?[-\\\\s.]?[0-9]{3}[-\\\\s.]?[0-9]{4,6}$\\/;$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "today", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const today = new Date();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validTypes", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^  const validTypes = ['image\\/jpeg', 'image\\/png', 'image\\/jpg', 'image\\/heic', 'application\\/pd/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "validateForm", "path": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "pattern": "/^export const validateForm = (values, requiredFields = []) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/code-generation/secureverify-pro-95436-95443/secureverify_pro/src/utils/validation.js", "hash": "4abd51aeff953c4015f67b2cd250e448", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let age = today.getFullYear() - dobDate.getFullYear();", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"65": "c719ce3deadfba73b617f0cf2c25e67d3bb3923e"}]}